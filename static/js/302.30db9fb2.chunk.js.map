{"version":3,"file":"static/js/302.30db9fb2.chunk.js","mappings":"iQASaA,GANcC,EAAAA,GAAAA,KAAH,mGAMHA,EAAAA,GAAAA,MAAH,mFAMLC,GAAOD,EAAAA,EAAAA,IAAOE,EAAAA,GAAPF,CAAH,6FAMJG,GAAeH,EAAAA,EAAAA,IAAOI,EAAAA,GAAPJ,CAAH,gE,2ICXnBK,EAAgBC,EAAAA,KAAaC,MAAM,CACrCC,KAAMF,EAAAA,KAAaG,IAAI,EAAG,cAAcC,IAAI,GAAI,aAAaC,SAAS,YACtEC,MAAON,EAAAA,KAAaM,QACpBC,SAAUP,EAAAA,KAAaG,IAAI,EAAG,cAAcC,IAAI,GAAI,aAAaC,SAAS,cAG/D,SAASG,IACpB,IAAMC,GAAWC,EAAAA,EAAAA,MAMjB,OACI,SAAC,KAAD,CACIC,cAAe,CACXT,KAAM,GACNI,MAAO,GACPC,SAAU,IAEdK,iBAAkBb,EAClBc,SAAU,SAACC,EAAQC,GAbD,IAACC,EAcfC,QAAQC,IAAI,6EAdGF,EAeGF,EAd1BL,GAASU,EAAAA,EAAAA,IAASH,IAElBC,QAAQC,IAAI,2GAaJD,QAAQC,IAAI,+FACZH,EAAQK,WACX,EAZL,UAcI,UAAC,KAAD,YACI,UAAC,KAAD,YACI,wCACA,SAAC,KAAD,CACAC,YAAY,WACZC,KAAK,OACLpB,KAAK,UAEL,SAAC,KAAD,CAAcA,KAAK,OAAOqB,UAAU,aAGxC,UAAC,KAAD,YACI,oCACA,SAAC,KAAD,CACAF,YAAY,qBACZC,KAAK,QACLpB,KAAK,WAEL,SAAC,KAAD,CAAcA,KAAK,QAAQqB,UAAU,aAGzC,UAAC,KAAD,YACI,uCACA,SAAC,KAAD,CACAF,YAAY,UACZC,KAAK,WACLpB,KAAK,cAEL,SAAC,KAAD,CAAcA,KAAK,WAAWqB,UAAU,aAG5C,mBAAQD,KAAK,SAAb,6BAIf,C","sources":["components/ContactForm/ContactForm.styled.js","page/Register.js"],"sourcesContent":["import styled from 'styled-components';\nimport {Form as FormikForm, ErrorMessage as FormikError} from 'formik'\n\nexport const FormContact = styled.form`\n    width: 350px;\n    padding: 10px;\n    border: 1px solid black;\n    \n`;\nexport const Label = styled.label`\n    display: block;\n    margin: 0px 0px 20px 0px;\n    \n`;\n\nexport const Form = styled(FormikForm)`\n    width: 350px;\n    padding: 10px;\n    border: 1px solid black;\n`\n\nexport const ErrorMessage = styled(FormikError)`\n    display: block;\n    color: tomato;\n`","import React  from \"react\";\nimport { Label, Form, ErrorMessage } from \"../components/ContactForm/ContactForm.styled\";\nimport { Field, Formik, } from \"formik\";\nimport * as Yup from 'yup';\nimport { useDispatch } from \"react-redux\";\nimport { register } from \"redux/auth/auth-operations\"; \n\n\n\n\nconst ContactSchema = Yup.object().shape({\n    name: Yup.string().min(2, 'Too Short!').max(20, 'Too Long!').required('Required'),\n    email: Yup.string().email(),\n    password: Yup.string().min(6, 'Too Short!').max(15, 'Too Long!').required('Required'),  \n  });\n\nexport default function Register() {\n    const dispatch = useDispatch();\n    const handlerSubmitForm = (User) => {\n        dispatch(register(User));\n    \n        console.log('будемо реєструвати')\n    }\n    return (\n        <Formik\n            initialValues={{\n                name: '',\n                email: '',\n                password: '',\n            }}\n            validationSchema={ContactSchema}\n            onSubmit={(values, actions) => {\n                console.log('кнопку нажато');\n                handlerSubmitForm(values);\n                console.log('хендел спрацював');\n                actions.resetForm();\n            }}\n            >\n            <Form >\n                <Label>\n                    <p> User name </p> \n                    <Field\n                    placeholder=\"Jane Doe\"\n                    type=\"text\"\n                    name=\"name\"\n                    />\n                    <ErrorMessage name=\"name\" component='span'/>\n                </Label>\n                    \n                <Label>\n                    <p> Email </p>\n                    <Field\n                    placeholder=\"Jane_Doe@gmail.com\"\n                    type=\"email\"\n                    name=\"email\"\n                    />\n                    <ErrorMessage name=\"email\" component='span'/>\n                </Label>\n\n                <Label>\n                    <p> Password </p>\n                    <Field\n                    placeholder=\"*******\"\n                    type=\"password\"\n                    name=\"password\"\n                    />\n                    <ErrorMessage name=\"password\" component='span'/>\n                </Label>\n                \n                <button type=\"submit\">Add contact</button>\n            </Form>\n        </Formik>\n    )\n}\n\n\n"],"names":["Label","styled","Form","FormikForm","ErrorMessage","FormikError","ContactSchema","Yup","shape","name","min","max","required","email","password","Register","dispatch","useDispatch","initialValues","validationSchema","onSubmit","values","actions","User","console","log","register","resetForm","placeholder","type","component"],"sourceRoot":""}